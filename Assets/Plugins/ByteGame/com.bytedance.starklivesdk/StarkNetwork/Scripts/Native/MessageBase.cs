//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (http://www.swig.org).
// Version 4.0.2
//
// Do not make changes to this file unless you know what you are doing--modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------

namespace StarkMatchmaking {

public class MessageBase : EventBaseData {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;

  internal MessageBase(global::System.IntPtr cPtr, bool cMemoryOwn) : base(stark_matchmakingPINVOKE.MessageBase_SWIGUpcast(cPtr), cMemoryOwn) {
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(MessageBase obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  protected override void Dispose(bool disposing) {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          stark_matchmakingPINVOKE.delete_MessageBase(swigCPtr);
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
      base.Dispose(disposing);
    }
  }

  public int msg_type {
    set {
      stark_matchmakingPINVOKE.MessageBase_msg_type_set(swigCPtr, value);
    } 
    get {
      int ret = stark_matchmakingPINVOKE.MessageBase_msg_type_get(swigCPtr);
      return ret;
    } 
  }

  public ulong request_id {
    set {
      stark_matchmakingPINVOKE.MessageBase_request_id_set(swigCPtr, value);
    } 
    get {
      ulong ret = stark_matchmakingPINVOKE.MessageBase_request_id_get(swigCPtr);
      return ret;
    } 
  }

  public ErrorInfo err {
    set {
      stark_matchmakingPINVOKE.MessageBase_err_set(swigCPtr, ErrorInfo.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = stark_matchmakingPINVOKE.MessageBase_err_get(swigCPtr);
      ErrorInfo ret = (cPtr == global::System.IntPtr.Zero) ? null : new ErrorInfo(cPtr, false);
      return ret;
    } 
  }

  public void SetErrorInfo(int err_code, string err_msg) {
    stark_matchmakingPINVOKE.MessageBase_SetErrorInfo(swigCPtr, err_code, err_msg);
    if (stark_matchmakingPINVOKE.SWIGPendingException.Pending) throw stark_matchmakingPINVOKE.SWIGPendingException.Retrieve();
  }

  public MessageBase() : this(stark_matchmakingPINVOKE.new_MessageBase(), true) {
  }

}

}
