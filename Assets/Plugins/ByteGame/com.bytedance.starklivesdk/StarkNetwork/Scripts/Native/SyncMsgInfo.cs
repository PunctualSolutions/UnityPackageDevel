//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (http://www.swig.org).
// Version 4.0.2
//
// Do not make changes to this file unless you know what you are doing--modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------

namespace StarkMatchmaking {

public class SyncMsgInfo : MessageBase {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;

  internal SyncMsgInfo(global::System.IntPtr cPtr, bool cMemoryOwn) : base(stark_matchmakingPINVOKE.SyncMsgInfo_SWIGUpcast(cPtr), cMemoryOwn) {
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(SyncMsgInfo obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  protected override void Dispose(bool disposing) {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          stark_matchmakingPINVOKE.delete_SyncMsgInfo(swigCPtr);
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
      base.Dispose(disposing);
    }
  }

  public ulong from_player_id {
    set {
      stark_matchmakingPINVOKE.SyncMsgInfo_from_player_id_set(swigCPtr, value);
    } 
    get {
      ulong ret = stark_matchmakingPINVOKE.SyncMsgInfo_from_player_id_get(swigCPtr);
      return ret;
    } 
  }

  public string msg {
    set {
      stark_matchmakingPINVOKE.SyncMsgInfo_msg_set(swigCPtr, value);
      if (stark_matchmakingPINVOKE.SWIGPendingException.Pending) throw stark_matchmakingPINVOKE.SWIGPendingException.Retrieve();
    } 
    get {
      string ret = stark_matchmakingPINVOKE.SyncMsgInfo_msg_get(swigCPtr);
      if (stark_matchmakingPINVOKE.SWIGPendingException.Pending) throw stark_matchmakingPINVOKE.SWIGPendingException.Retrieve();
      return ret;
    } 
  }

  public ulong room_id {
    set {
      stark_matchmakingPINVOKE.SyncMsgInfo_room_id_set(swigCPtr, value);
    } 
    get {
      ulong ret = stark_matchmakingPINVOKE.SyncMsgInfo_room_id_get(swigCPtr);
      return ret;
    } 
  }

  public SyncMsgInfo() : this(stark_matchmakingPINVOKE.new_SyncMsgInfo(), true) {
  }

}

}
